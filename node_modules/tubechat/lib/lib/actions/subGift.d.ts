/// <reference types="node" />
/// <reference types="node" />
interface Thumbnail {
    url: string;
    width: number;
    height: number;
}
interface AuthorName {
    simpleText: string;
}
interface AuthorPhoto {
    thumbnails: Thumbnail[];
}
interface Run {
    text: string;
    italics?: boolean;
    bold?: boolean;
}
interface Message {
    runs: Run[];
}
interface WebCommandMetadata {
    ignoreNavigation: boolean;
}
interface LiveChatItemContextMenuEndpoint {
    params: string;
}
interface CommandMetadata {
    webCommandMetadata: WebCommandMetadata;
}
interface ContextMenuEndpoint {
    commandMetadata: CommandMetadata;
    liveChatItemContextMenuEndpoint: LiveChatItemContextMenuEndpoint;
}
interface AccessibilityData {
    label: string;
}
interface ContextMenuAccessibility {
    accessibilityData: AccessibilityData;
}
interface MessageDataUserReceiveSubGift {
    id: string;
    timestampUsec: string;
    authorExternalChannelId: string;
    authorName: AuthorName;
    authorPhoto: AuthorPhoto;
    message: Message;
    contextMenuEndpoint: ContextMenuEndpoint;
    contextMenuAccessibility: ContextMenuAccessibility;
}
export interface IUserReceiveSubGift {
    id: string;
    amount: number;
    text: string;
    name: string;
    authorExternalChannelId: string;
    timestamp: string;
    thumbnail: {
        url: string;
        alt: string;
    };
}
declare const userReceiveSubGift: (messageData: MessageDataUserReceiveSubGift, emitter: NodeJS.EventEmitter, channel: string) => void;
export default userReceiveSubGift;
