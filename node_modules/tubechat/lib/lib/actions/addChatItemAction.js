"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const engagement_1 = __importDefault(require("./engagement"));
const liveChatSponsorshipsGiftPurchaseAnnouncementRenderer_1 = __importDefault(require("./liveChatSponsorshipsGiftPurchaseAnnouncementRenderer"));
const sub_1 = __importDefault(require("./sub"));
const subGift_1 = __importDefault(require("./subGift"));
const superchat_1 = __importDefault(require("./superchat"));
const textMessaage_1 = __importDefault(require("./textMessaage"));
const addChatItemAction = (messageData, emitter, channel) => {
    const entries = Object.entries(messageData === null || messageData === void 0 ? void 0 : messageData.item);
    const [action, firstValue] = entries[0];
    if (action == 'liveChatPlaceholderItemRenderer')
        return; // unless
    if (action == 'liveChatTextMessageRenderer') { // common message
        return (0, textMessaage_1.default)(messageData.item.liveChatTextMessageRenderer, emitter, channel);
    }
    if (action == 'liveChatViewerEngagementMessageRenderer') {
        return (0, engagement_1.default)(messageData.item.liveChatViewerEngagementMessageRenderer, emitter, channel);
    }
    if (action == 'liveChatPaidMessageRenderer' || action == 'liveChatPaidStickerRenderer') {
        return (0, superchat_1.default)(messageData.item, emitter, channel);
    }
    if (action == 'liveChatSponsorshipsGiftPurchaseAnnouncementRenderer') {
        return (0, liveChatSponsorshipsGiftPurchaseAnnouncementRenderer_1.default)(messageData.item.liveChatSponsorshipsGiftPurchaseAnnouncementRenderer, emitter, channel);
    }
    if (action == 'liveChatSponsorshipsGiftRedemptionAnnouncementRenderer' || action == 'liveChatTickerPaidMessageItemRenderer') {
        return (0, subGift_1.default)(messageData.item.liveChatSponsorshipsGiftRedemptionAnnouncementRenderer, emitter, channel);
    }
    if (action == 'liveChatMembershipItemRenderer') { // member - resub
        return (0, sub_1.default)(messageData.item.liveChatMembershipItemRenderer, emitter, channel);
    }
    emitter.emit('unkown', Object.assign(Object.assign({}, messageData), { channel }));
};
exports.default = addChatItemAction;
