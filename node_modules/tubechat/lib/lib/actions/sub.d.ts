/// <reference types="node" />
/// <reference types="node" />
import { IChatYTMessage } from "../../types/Client";
import { IChatAuthorBadge, IChatMessage, IChatThumbnail } from "../../types/Types";
interface SubData {
    "id": string;
    "timestampUsec": string;
    "authorExternalChannelId": string;
    "headerPrimaryText"?: {
        "runs": [
            {
                "text": "Member for ";
            },
            {
                "text": "7";
            },
            {
                "text": " months";
            }
        ];
    };
    "headerSubtext": {
        "simpleText": string;
        "runs": {
            text: string;
        }[];
    };
    "message": {
        "runs": IChatMessage[];
    };
    "authorName": {
        "simpleText": string;
    };
    "authorPhoto": {
        "thumbnails": IChatThumbnail[];
    };
    "authorBadges": IChatAuthorBadge[];
}
export interface ISub extends IChatYTMessage {
    isResub: boolean;
    toolTip: string;
    months: number;
    tier: string;
}
declare const sub: (messageData: SubData, emitter: NodeJS.EventEmitter, channel: string) => void;
export default sub;
