/// <reference types="node" />
/// <reference types="node" />
import { IChatThumbnail } from "../../types/Types";
import { FormatPoolChoices } from "./actionsUtils";
export interface PoolChoices {
    "text": {
        "runs": {
            text: string;
        }[];
    };
    "selected": boolean;
    "voteRatio": number;
    "votePercentage": {
        "simpleText": string;
    };
}
interface UpdateLiveChatPollAction {
    "pollToUpdate": {
        "pollRenderer": {
            "choices": PoolChoices[];
            "liveChatPollId": string;
            "header": {
                "pollHeaderRenderer": {
                    "pollQuestion": {
                        "runs": {
                            text: string;
                        }[];
                    };
                    "thumbnail": {
                        "thumbnails": IChatThumbnail[];
                    };
                    "metadataText": {
                        "runs": {
                            text: string;
                        }[];
                    };
                    "liveChatPollType": string;
                };
            };
        };
    };
}
export interface LivePools {
    choices: FormatPoolChoices[];
    question: {
        text: string;
    }[];
    started: string;
    votes: string;
    channel: string;
}
declare const updateLiveChatPollAction: (messageData: UpdateLiveChatPollAction, emitter: NodeJS.EventEmitter, channel: string) => void;
export default updateLiveChatPollAction;
