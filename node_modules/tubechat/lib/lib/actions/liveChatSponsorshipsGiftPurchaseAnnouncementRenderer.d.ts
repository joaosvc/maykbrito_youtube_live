/// <reference types="node" />
/// <reference types="node" />
import { IChatYTMessage } from "../../types/Client";
import { IChatAuthorBadge, IChatThumbnail } from "../../types/Types";
import { GiftRuns } from "./liveChatTickerSponsorItemRenderer";
interface LiveChatSponsorShipsGiftPurchaseAnnouncementRenderer {
    id: string;
    timestampUsec: string;
    authorExternalChannelId: string;
    header: {
        liveChatSponsorshipsHeaderRenderer: {
            authorName: {
                simpleText: string;
            };
            authorPhoto: {
                thumbnails: IChatThumbnail[];
            };
            primaryText: {
                runs: GiftRuns[];
            };
            authorBadges: IChatAuthorBadge[];
            image: {
                thumbnails: [
                    {
                        url: "https://www.gstatic.com/youtube/img/sponsorships/sponsorships_gift_purchase_announcement_artwork.png";
                    }
                ];
            };
        };
    };
}
export interface ISubGift extends IChatYTMessage {
    id: string;
    giftImage: string;
    amount: number;
    text: string;
    name: string;
}
declare const liveChatSponsorshipsGiftPurchaseAnnouncementRenderer: (messageData: LiveChatSponsorShipsGiftPurchaseAnnouncementRenderer, emitter: NodeJS.EventEmitter, channel: string) => void;
export default liveChatSponsorshipsGiftPurchaseAnnouncementRenderer;
