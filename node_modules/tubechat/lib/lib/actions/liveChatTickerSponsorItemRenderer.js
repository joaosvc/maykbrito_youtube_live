"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const liveChatTickerSponsorItemRenderer = ({ item: { liveChatTickerSponsorItemRenderer } }, emitter, channel) => {
    var _a, _b;
    if (!liveChatTickerSponsorItemRenderer)
        return;
    const { detailTextColor, startBackgroundColor, endBackgroundColor, fullDurationSec, authorExternalChannelId } = liveChatTickerSponsorItemRenderer;
    const accessibilityData = (0, utils_1.findKey)(liveChatTickerSponsorItemRenderer, "accessibilityData");
    const primaryText = (0, utils_1.findKey)(liveChatTickerSponsorItemRenderer, "primaryText");
    const authorName = (0, utils_1.findKey)(liveChatTickerSponsorItemRenderer, "authorName");
    const liveChatAuthorBadgeRenderer = liveChatTickerSponsorItemRenderer.showItemEndpoint.showLiveChatItemEndpoint.renderer.liveChatSponsorshipsGiftPurchaseAnnouncementRenderer.header.liveChatSponsorshipsHeaderRenderer.authorBadges;
    const giftTo = (0, utils_1.filterAndExtractSubGiftNames)(primaryText);
    const responseData = {
        amount: Number(primaryText[1].text),
        channelName: authorName.simpleText,
        channelId: authorExternalChannelId,
        giftTo,
        badges: (0, utils_1.createBadgesElements)((_b = (_a = liveChatAuthorBadgeRenderer[0].liveChatAuthorBadgeRenderer) === null || _a === void 0 ? void 0 : _a.customThumbnail) === null || _b === void 0 ? void 0 : _b.thumbnails, liveChatAuthorBadgeRenderer[0].liveChatAuthorBadgeRenderer.tooltip),
        duration: fullDurationSec,
        detailTextColor: (0, utils_1.convertColorToHex6)(detailTextColor),
        startBackgroundColor: (0, utils_1.convertColorToHex6)(startBackgroundColor),
        endBackgroundColor: (0, utils_1.convertColorToHex6)(endBackgroundColor)
    };
    emitter.emit("gift", Object.assign({ channel }, responseData));
};
exports.default = liveChatTickerSponsorItemRenderer;
