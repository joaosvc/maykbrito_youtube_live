/// <reference types="node" />
import { EventEmitter } from 'events';
import { FlowMonitorEvents, FlowMonitorOtions, LMLiveData, LMPlatforms } from './types';
export declare class FlowMonitor extends EventEmitter {
    #private;
    constructor({ youtube, twitch }?: FlowMonitorOtions);
    on<E extends keyof FlowMonitorEvents>(event: E, listener: FlowMonitorEvents[E]): this;
    private setCheckerConnected;
    connect(channel: string, platform: LMPlatforms): void;
    livedata(channel: string, platform: LMPlatforms): LMLiveData | undefined;
    disconnect(channel: string, platform: LMPlatforms): void;
    private emitLiveData;
    private connectTwWebsocket;
    start(): void;
    close(): void;
    private twitchSubUnsubWSEvents;
    private getTwChannelById;
    private addTwitchListeners;
    private youtubeChecker;
}
