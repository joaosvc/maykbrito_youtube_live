"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.payloads = exports.createNonce = exports.pubsubWSURL = void 0;
exports.pubsubWSURL = "wss://pubsub-edge.twitch.tv/v1";
function createNonce(length = 30) {
    const characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    const charactersLength = characters.length;
    let nonce = '';
    for (let i = 0; i < length; i++) {
        const charIndex = Math.floor(Math.random() * charactersLength);
        nonce += characters.charAt(charIndex);
    }
    return nonce;
}
exports.createNonce = createNonce;
exports.payloads = {
    "gameBroadcaster": (channelID, type = 'LISTEN') => {
        return `{"type":"${type}","nonce":"${createNonce()}","data":{"topics":["broadcast-settings-update.${channelID}"]}}`;
    },
    "raid": (channelID, type = 'LISTEN') => {
        return `{"type":"${type}","nonce":"${createNonce()}","data":{"topics":["raid.${channelID}"]}}`;
    },
    "predictions": (channelID, type = 'LISTEN') => {
        return `{"type":"${type}","nonce":"${createNonce()}","data":{"topics":["predictions-channel-v1.${channelID}"]}}`;
    },
    "videoPlayBack": (channelID, type = 'LISTEN') => {
        return `{"type":"${type}","nonce":"${createNonce()}","data":{"topics":["video-playback-by-id.${channelID}"]}}`;
    }
};
